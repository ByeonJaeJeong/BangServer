package application;




import java.awt.Desktop.Action;
import java.net.Socket;
import java.net.URL;

import java.util.ResourceBundle;

import javax.swing.table.TableRowSorter;

import javafx.beans.value.ChangeListener;
import javafx.collections.FXCollections;
import javafx.collections.ListChangeListener;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableRow;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class RoomManagerController implements Initializable{
	Socket socket;
	
	@FXML
	TableView<Table> Roominfo= new TableView<Table>();
	
	public static  ObservableList<Table> data=FXCollections.observableArrayList(
			new Table("안녕", "안녕", "안녕"));
			
	@FXML
	private TableColumn<Table,String> inwonCol;
	@FXML
	private TableColumn<Table,String> titleCol;
	@FXML
	private TableColumn<Table,String> stateCol;
	@FXML
	private Button refreshBtn;
	
	private Object oldValue = null;
		

		
	
			
	
	


	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		  System.out.println("FXML Load Complete");
		  
		  Roominfo.setPlaceholder(new Label("Loding..."));
		inwonCol.setCellValueFactory(new PropertyValueFactory<Table,String>("inwon"));
		titleCol.setCellValueFactory(new PropertyValueFactory<Table,String>("title"));
		stateCol.setCellValueFactory(new PropertyValueFactory<Table,String>("state"));

		Roominfo.getItems().setAll(this.data);
		refreshBtn.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {
		
			@Override
			public void handle(MouseEvent event) {
				
				Client.sendMsg("500|");
				
				System.out.println("initdata크기="+data.size());
				Roominfo.getItems().clear();
				Roominfo.getItems().addAll(data);
				
			}
		});
		
		//Select 된 이전 값을 저장하기 위한 변수
		
		Roominfo.setOnMouseClicked(event -> {
            if(Roominfo.getSelectionModel().getSelectedItem() != null) {
                if (event.getPickResult().getIntersectedNode().equals(oldValue)) {
                    Roominfo.getSelectionModel().clearSelection();
                  String title=  oldValue.toString().split("]")[1].replace("'", "");
                  Stage priamryStage;
					Main main=new Main();
					main.GameRoom(Main.primaryStage, title);
                    oldValue = null;
                  
                } else {
                    oldValue = event.getPickResult().getIntersectedNode();
                    System.out.println(oldValue);
                }
            }
        });
	

	
	
	


	
	
	
			

		
		
		
	}//initialize 끝
	
	
	@FXML Pane addRoomPanel;
	@FXML
	public void addRoomBtn(){
		addRoomPanel.setVisible(true);
	}
	@FXML TextField title_input;
	@FXML TextField pass_input;
	@FXML
	public void addRoomcancel(){
		title_input.setText("");
		pass_input.setText("");
		addRoomPanel.setVisible(false);
	}
	@FXML
	public void addRoom(){
		String title_pass="160|"+title_input.getText()+"|"+pass_input.getText();
		
		addRoomPanel.setVisible(false);
		title_input.setText("");
		pass_input.setText("");
		
		Client.sendMsg(title_pass);
	}
	
	
	
	
	
	
	public void addTable(String[] Tables,ObservableList<Table> datas){

		
		System.out.println("addTable실행");
		for(int i=0;Tables.length>i;i++){
			
			String title=Tables[i].split("--")[0];
			String inwon=Tables[i].split("--")[1]+"/8";
			String state="대기중";
			System.out.println("name="+title+"Inwon="+inwon);
			
			data.addAll(new Table(inwon, title, state));
			
		
		}
	
		System.out.println("data크기"+data.size());
		System.out.println("실행끝");
		
		
		
		}
	
	
}


